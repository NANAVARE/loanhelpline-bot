const express = require('express');
const bodyParser = require('body-parser');
const { google } = require('googleapis');
const axios = require('axios');
const app = express();
const port = process.env.PORT || 10000;

app.use(bodyParser.json());

// ЁЯЫбя╕П ENV variables
const WHATSAPP_API_URL = `https://graph.facebook.com/v18.0/${process.env.WHATSAPP_PHONE_NUMBER_ID}/messages`;
const WHATSAPP_TOKEN = process.env.WHATSAPP_TOKEN;
const SHEET_ID = process.env.SHEET_ID;
const ADMIN_PHONE = '918329569608'; // рддреБрдордЪрд╛ Admin рдирдВрдмрд░

const SCOPES = ['https://www.googleapis.com/auth/spreadsheets'];
const auth = new google.auth.GoogleAuth({
  credentials: JSON.parse(process.env.GOOGLE_CREDENTIALS_JSON),
  scopes: SCOPES,
});

// ЁЯФв Loan types & Google Sheet ranges
const loanTypes = {
  '1': 'Home Loan',
  '2': 'Personal Loan',
  '3': 'Transfer Your Loan',
  '4': 'Business Loan',
  '5': 'Mortgage Loan',
  '6': 'Industrial Property Loan',
  '7': 'Commercial Property Loan',
};

const sheetRanges = {
  'Home Loan': 'Home Loan Offers!A2:G100',
  'Personal Loan': 'Personal Loan Offers!A2:G100',
  'Transfer Your Loan': 'Transfer Loan Offers!A2:G100',
  'Business Loan': 'Business Loan Offers!A2:G100',
  'Mortgage Loan': 'Mortgage Loan Offers!A2:G100',
  'Industrial Property Loan': 'Industrial Property Offers!A2:G100',
  'Commercial Property Loan': 'Commercial Property Offers!A2:G100',
};

const userState = {}; // phone => { step, loanType, income, city, amount, name }

const sendWhatsAppMessage = async (phone, message) => {
  try {
    await axios.post(
      WHATSAPP_API_URL,
      {
        messaging_product: 'whatsapp',
        to: phone,
        text: { body: message },
      },
      {
        headers: {
          Authorization: `Bearer ${WHATSAPP_TOKEN}`,
          'Content-Type': 'application/json',
        },
      }
    );
    console.log(`ЁЯУд Reply sent to ${phone}: ${message}`);
  } catch (error) {
    console.error('тЭМ Error sending WhatsApp message:', error.response?.data || error.message);
  }
};

const getLoanOffersFromSheet = async (loanType) => {
  const client = await auth.getClient();
  const sheets = google.sheets({ version: 'v4', auth: client });
  const range = sheetRanges[loanType];
  const response = await sheets.spreadsheets.values.get({
    spreadsheetId: SHEET_ID,
    range,
  });
  return response.data.values;
};

const sendLoanOffers = async (phone, loanType) => {
  const offers = await getLoanOffersFromSheet(loanType);
  if (!offers || offers.length === 0) {
    return sendWhatsAppMessage(phone, 'тЪая╕П рд╕рдзреНрдпрд╛ рдСрдлрд░реНрд╕ рдЙрдкрд▓рдмреНрдз рдирд╛рд╣реАрдд.');
  }

  for (const offer of offers) {
    if (offer.length < 6 || !offer[0]) continue; // Skip empty rows
    const message = `ЁЯФ╢ ${offer[0]} рдХрдбреВрди рдЖрдХрд░реНрд╖рдХ ${loanType} рдСрдлрд░:

ЁЯТ╝ рд▓реЛрди рдкреНрд░рдХрд╛рд░: ${loanType}
ЁЯУЙ рд╡реНрдпрд╛рдЬрджрд░: ${offer[1]}
ЁЯТ░ рдХрд░реНрдЬ рдорд░реНрдпрд╛рджрд╛: ${offer[5]}
ЁЯУЖ рдХрд╛рд▓рд╛рд╡рдзреА: ${offer[4]}
ЁЯУД рдкреНрд░реЛрд╕реЗрд╕рд┐рдВрдЧ рдлреА: ${offer[2]}
тЮХ рдЯреЙрдк-рдЕрдк: ${offer[3]}
тЬЕ рдкреВрд░реНрд╡-рдкрд░рддрдлреЗрдб: ${offer[6]}

LoanHelpline рд╕реЗрд╡реЗрд╕рд╛рдареА рдзрдиреНрдпрд╡рд╛рдж!`;

    await sendWhatsAppMessage(phone, message);
  }
};

const saveLeadToSheet = async (lead) => {
  const client = await auth.getClient();
  const sheets = google.sheets({ version: 'v4', auth: client });
  const now = new Date().toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' });

  const values = [[
    now,
    lead.name,
    lead.phone,
    lead.city,
    lead.income,
    lead.loanType,
    lead.amount,
    'New Lead',        // тЬЕ Status
    'WhatsApp Bot'     // тЬЕ Source
  ]];

  await sheets.spreadsheets.values.append({
    spreadsheetId: SHEET_ID,
    range: 'Sheet1!A2',
    valueInputOption: 'USER_ENTERED',
    requestBody: { values },
  });
};

const notifyAdmin = async (lead) => {
  const msg = `тЪая╕П рдирд╡реАрди рд▓реЛрди рд▓реАрдб:
ЁЯСд рдирд╛рд╡: ${lead.name}
ЁЯУЮ рдирдВрдмрд░: ${lead.phone}
ЁЯПж Loan Type: ${lead.loanType}
ЁЯТ░ рдЙрддреНрдкрдиреНрди: ${lead.income}
ЁЯМН рд╢рд╣рд░: ${lead.city}
ЁЯУЙ рд░рдХреНрдХрдо: ${lead.amount}`;
  await sendWhatsAppMessage(ADMIN_PHONE, msg);
};

app.post('/webhook', async (req, res) => {
  const message = req.body.entry?.[0]?.changes?.[0]?.value?.messages?.[0];
  if (!message) return res.sendStatus(200);

  const phone = message.from;
  const text = message.text?.body.trim();
  const user = userState[phone] || { step: 0, phone };

  switch (user.step) {
    case 0:
      await sendWhatsAppMessage(
        phone,
        `Loan рд╕рд╛рдареА рдХреНрд░рдорд╛рдВрдХ рдЯрд╛рдХрд╛:
1я╕ПтГг Home Loan
2я╕ПтГг Personal Loan
3я╕ПтГг Transfer Your Loan
4я╕ПтГг Business Loan
5я╕ПтГг Mortgage Loan
6я╕ПтГг Industrial Property Loan
7я╕ПтГг Commercial Property Loan

рдХреГрдкрдпрд╛ рдлрдХреНрдд рдХреНрд░рдорд╛рдВрдХ рдЯрд╛рдХрд╛. (рдЙрджрд╛: 1)`
      );
      user.step = 1;
      break;
    case 1:
      user.loanType = loanTypes[text];
      if (!user.loanType) {
        return await sendWhatsAppMessage(phone, 'тЭМ рдЪреБрдХреАрдЪрд╛ рдкрд░реНрдпрд╛рдп. рдХреГрдкрдпрд╛ 1 рддреЗ 7 рдордзреАрд▓ рдХреНрд░рдорд╛рдВрдХ рдЯрд╛рдХрд╛.');
      }
      await sendWhatsAppMessage(phone, `тЬЕ рдЖрдкрдг рдирд┐рд╡рдбрд▓рдВ рдЖрд╣реЗ: ${user.loanType}\n\nЁЯУЭ Eligibility рд╕рд╛рдареА рдорд╛рд╣рд┐рддреА рдкрд╛рдард╡рд╛:\nрдЙрджрд╛: тВ╣30000`);
      user.step = 2;
      break;
    case 2:
      user.income = text;
      await sendWhatsAppMessage(phone, 'ЁЯМН рддреБрдордЪрдВ рд╢рд╣рд░/рдЧрд╛рд╡ рд╕рд╛рдВрдЧрд╛ (рдЙрджрд╛: Pune)');
      user.step = 3;
      break;
    case 3:
      user.city = text;
      await sendWhatsAppMessage(phone, 'ЁЯТ░ рддреБрдореНрд╣рд╛рд▓рд╛ рдХрд┐рддреА рд▓реЛрди рд╣рд╡рд╛ рдЖрд╣реЗ? (рдЙрджрд╛: тВ╣15 рд▓рд╛рдЦ)');
      user.step = 4;
      break;
    case 4:
      user.amount = text;
      await sendWhatsAppMessage(phone, 'ЁЯШЗ рддреБрдордЪрдВ рдкреВрд░реНрдг рдирд╛рд╡ рд╕рд╛рдВрдЧрд╛ (рдЙрджрд╛: Rahul Patil)');
      user.step = 5;
      break;
    case 5:
      user.name = text;

      await sendWhatsAppMessage(phone, `ЁЯОЙ рдзрдиреНрдпрд╡рд╛рдж! рддреБрдордЪрдВ рд▓реЛрди рдЕрд░реНрдЬ рдЖрдореНрд╣реА рдкреНрд░рд╛рдкреНрдд рдХреЗрд▓рд╛ рдЖрд╣реЗ.\nрдЖрдордЪреЗ рдкреНрд░рддрд┐рдирд┐рдзреА рд▓рд╡рдХрд░рдЪ рд╕рдВрдкрд░реНрдХ рдХрд░рддреАрд▓.`);
      await notifyAdmin(user);
      await saveLeadToSheet(user);
      await sendLoanOffers(phone, user.loanType);

      delete userState[phone];
      break;
  }

  userState[phone] = user;
  res.sendStatus(200);
});

app.get('/', (req, res) => {
  res.send('тЬЕ LoanHelpline Bot рдЪрд╛рд▓реВ рдЖрд╣реЗ');
});

app.listen(port, () => {
  console.log(`тЬЕ LoanHelpline Bot рдЪрд╛рд▓реВ рдЖрд╣реЗ рдкреЛрд░реНрдЯ ${port}`);
});
